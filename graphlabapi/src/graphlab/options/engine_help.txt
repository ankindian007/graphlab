"Synchronous Engine (sync)\n"
"=========================\n"
"The synchronous engine executes all active vertex program\n"
"synchronously in a sequence of super-step (iterations) in both the\n"
"shared and distributed memory settings.\n"
"\n"
"max_iterations: (default: infinity) The maximum number\n"
"of iterations (super-steps) to run.\n"
"\n"
"timeout: (default: infinity) The maximum time in\n"
"seconds that the engine may run. When the time runs out the\n"
"current iteration is completed and then the engine terminates.\n"
"\n"
"use_cache: (default: false) This is used to enable\n"
"caching. The update function must be written in a specific way\n"
"to take advantage of this. See the documentation for details.\n"
"\n"
"snapshot_interval: (default: -1) If set to a positive value, a snapshot\n"
"is taken every this number of iterations. If set to 0, a snapshot\n"
"is taken before the first iteration. If set to a negative value,\n"
"no snapshots are taken. A snapshot is a binary dump of the graph.\n"
"\n"
"snapshot_path: If snapshot_interval is set to a value >=0,\n"
"this option must be specified and should contain a target basename \n"
"for the snapshot. The path including folder and file prefix in \n"
"which the snapshots should be saved.\n"
"\n"
"\n"
"Asynchronous Engine (async)\n"
"===========================\n"
"The asynchronous consistent engine executed vertex programs\n"
"asynchronously but ensures mutual exclusion such that adjacent vertices\n"
" \n"
"max_clean_fraction (default: 1) \n"
"The maximum proportion of edges which can be locked at any one time.\n"
"\n"
"timeout (default: infinity) Maximum time in seconds the engine will\n"
"run for. \n"
"\n"
"factorized (default: false) Set to true to weaken the consistency\n"
"model to factorized consistency where only individual gather/apply/scatter\n"
"calls are guaranteed to be locally consistent. Can produce large \n"
"increases in throughput at a consistency penalty.\n"
"\n"
"use_cache: (default: false) This is used to enable\n"
"caching. The update function must be written in a specific way\n"
"to take advantage of this. See the documentation for details.\n"
"\n"
"track_task_time: (default: false) Set to true to enable tracking\n"
"of how long each task takes to retire on average. Should only be used for\n"
"internal engine profiling purposes\n"
"Semi Synchronous Engine (semisync)\n"
"=========================\n"
"The semi synchronous engine is functionally \"in between\" the synchronous and\n"
"the asynchronous engine. It behaves like the synchronous engine and runs\n"
"vertex progams in super-steps, but it only runs a subset of the set of active\n"
"vertices each round, thus achieving asynchronous-like operation using a\n"
"synchronous execution\n"
"\n"
"max_iterations: (default: infinity) The maximum number\n"
"of iterations (super-steps) to run.\n"
"\n"
"timeout: (default: infinity) The maximum time in\n"
"seconds that the engine may run. When the time runs out the\n"
"current iteration is completed and then the engine terminates.\n"
"\n"
"use_cache: (default: false) This is used to enable\n"
"caching. The update function must be written in a specific way\n"
"to take advantage of this. See the documentation for details.\n"
"\n"
"snapshot_interval: (default: -1) If set to a positive value, a snapshot\n"
"is taken every this number of iterations. If set to 0, a snapshot\n"
"is taken before the first iteration. If set to a negative value,\n"
"no snapshots are taken. A snapshot is a binary dump of the graph.\n"
"\n"
"snapshot_path: If snapshot_interval is set to a value >=0,\n"
"this option must be specified and should contain a target basename \n"
"for the snapshot. The path including folder and file prefix in \n"
"which the snapshots should be saved.\n"
"\n"
"max_active_vertices: The number of active vertices per machine to run in each\n"
"synchronous iteration. Defaults to 1000, or 0.1 of the local graph, which ever\n"
"is larger. Must not be used together with max_active_fraction"
"\n"
"max_active_fraction: The fraction of active vertices per machine to run in each\n"
"synchronous iteration. Defaults to 1000, or 0.1 of the local graph, which ever\n"
"is larger. Must not be used together with max_active_vertices"
"\n"

